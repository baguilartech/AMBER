apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: amber-discord-bot
  namespace: argocd
  labels:
    app: amber-discord-bot
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: https://github.com/baguilartech/AMBER.git
    targetRevision: HEAD
    path: k8s
  destination:
    server: https://kubernetes.default.svc
    namespace: amber
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
  revisionHistoryLimit: 10
  ignoreDifferences:
  - group: apps
    kind: Deployment
    jsonPointers:
    - /spec/replicas
---
apiVersion: argoproj.io/v1alpha1
kind: AppProject
metadata:
  name: amber-project
  namespace: argocd
spec:
  description: AMBER Discord Bot Project
  sourceRepos:
  - 'https://github.com/baguilartech/AMBER.git'
  destinations:
  - namespace: amber
    server: https://kubernetes.default.svc
  - namespace: amber-*
    server: https://kubernetes.default.svc
  clusterResourceWhitelist:
  - group: ''
    kind: Namespace
  - group: rbac.authorization.k8s.io
    kind: ClusterRole
  - group: rbac.authorization.k8s.io
    kind: ClusterRoleBinding
  namespaceResourceWhitelist:
  - group: ''
    kind: ConfigMap
  - group: ''
    kind: Secret
  - group: ''
    kind: Service
  - group: ''
    kind: ServiceAccount
  - group: ''
    kind: PersistentVolumeClaim
  - group: apps
    kind: Deployment
  - group: apps
    kind: DaemonSet
  - group: networking.k8s.io
    kind: Ingress
  roles:
  - name: admin
    description: Admin privileges to amber project
    policies:
    - p, proj:amber-project:admin, applications, *, amber-project/*, allow
    - p, proj:amber-project:admin, repositories, *, *, allow
    groups:
    - amber-admins